
/**
 *
 * @param {response} response the error response
 */
export function errorHandling(err): Promise<never> {
    if(!err || err.response === undefined) {
        return Promise.reject(err);
    }
    let data;
    try {
        data = JSON.parse(err.response.data);
    } catch (e) {
        data = err.response.data;
    }
    switch (err.response.status) {
        case httpCode.BIZ_ERROR:
            return Promise.reject({...err, message: data.message});
{{if .Gen.HasCommonError}}
        case httpCode.COMMON_ERROR:
            let returnErr = mapCommonErrorType(data);
            if(!returnErr){
                throw err
            }
            return Promise.reject({...err.response, ...returnErr});
        default:
            return Promise.reject(err);
{{end}}
    }
}